{"ast":null,"code":"var _s = $RefreshSig$();\n// useTaskForm\nimport React, { useState } from \"react\";\nfunction useForm() {\n  _s();\n  const [state, setState] = useState({\n    showForm: false,\n    formValues: {\n      projectName: \"\",\n      task: \"\",\n      startDate: \"\",\n      endDate: \"\"\n    }\n  });\n  const {\n    showForm,\n    formValues\n  } = state;\n  function openForm() {\n    setState(prevState => ({\n      ...prevState,\n      showForm: true\n    }));\n  }\n  function closeForm() {\n    setState(prevState => ({\n      ...prevState,\n      showForm: false\n    }));\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    // Extract form values\n    const {\n      projectName,\n      task,\n      startDate,\n      endDate\n    } = state.formValues;\n\n    // Create a data object to send to the API\n    const data = {\n      projectName: projectName,\n      task: task,\n      startDate: startDate,\n      endDate: endDate\n    };\n\n    // Make an API request to submit the data\n    fetch('http://127.0.0.1:8090/api/collections/tasks/records/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseData => {\n      // Handle the API response here\n      console.log('API response:', responseData);\n    }).catch(error => {\n      // Handle any errors that occurred during the API request\n      console.error('Error:', error);\n    });\n\n    // Reset the form values and update state\n    setState(prevState => ({\n      ...prevState,\n      showForm: false,\n      formValues: {\n        projectName: \"\",\n        task: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      }\n    }));\n    // event.preventDefault();\n    // let submit = event.target.innerHTML\n    // setState((prevState) => ({\n    //   ...prevState,\n    //   showForm: false,\n    //   formValues: {\n    //     projectName: \"\",\n    //     task: \"\",\n    //     startDate: \"\",\n    //     endDate: \"\",\n    //   }\n    // }));\n    // return submit;\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      formValues: {\n        ...prevState.formValues,\n        [name]: value\n      }\n    }));\n  }\n  return {\n    state,\n    setState,\n    openForm,\n    showForm,\n    formValues,\n    closeForm,\n    handleSubmit,\n    handleInputChange\n  };\n}\n_s(useForm, \"3z738stRwoAMFGdbCHTlRq7uJoM=\");\nexport default useForm;","map":{"version":3,"names":["React","useState","useForm","_s","state","setState","showForm","formValues","projectName","task","startDate","endDate","openForm","prevState","closeForm","handleSubmit","event","preventDefault","data","fetch","method","headers","body","JSON","stringify","then","response","json","responseData","console","log","catch","error","handleInputChange","name","value","target"],"sources":["/Users/stephanierowe/clients_dashboard/clients_dashboard/src/hooks/useForm.js"],"sourcesContent":["// useTaskForm\nimport React, { useState } from \"react\";\n\nfunction useForm() {\n  const [state, setState] = useState({\n    showForm: false,\n    formValues: {\n      projectName: \"\",\n      task: \"\",\n      startDate: \"\",\n      endDate: \"\",\n    }\n  });\n\n  const { showForm, formValues } = state;\n\n  function openForm() {\n    setState((prevState) => ({\n      ...prevState,\n      showForm: true,\n    }));\n  }\n\n  function closeForm() {\n    setState((prevState) => ({\n      ...prevState,\n      showForm: false,\n    }));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  \n    // Extract form values\n    const { projectName, task, startDate, endDate } = state.formValues;\n  \n    // Create a data object to send to the API\n    const data = {\n      projectName: projectName,\n      task: task,\n      startDate: startDate,\n      endDate: endDate\n    };\n  \n    // Make an API request to submit the data\n    fetch('http://127.0.0.1:8090/api/collections/tasks/records/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        // Handle the API response here\n        console.log('API response:', responseData);\n      })\n      .catch(error => {\n        // Handle any errors that occurred during the API request\n        console.error('Error:', error);\n      });\n  \n    // Reset the form values and update state\n    setState((prevState) => ({\n      ...prevState,\n      showForm: false,\n      formValues: {\n        projectName: \"\",\n        task: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      }\n    }));\n    // event.preventDefault();\n    // let submit = event.target.innerHTML\n    // setState((prevState) => ({\n    //   ...prevState,\n    //   showForm: false,\n    //   formValues: {\n    //     projectName: \"\",\n    //     task: \"\",\n    //     startDate: \"\",\n    //     endDate: \"\",\n    //   }\n    // }));\n    // return submit;\n  }\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setState((prevState) => ({\n      ...prevState,\n      formValues: {\n        ...prevState.formValues,\n        [name]: value,\n      },\n    }));\n  }\n\n  return {state, setState, openForm, showForm, formValues, closeForm, handleSubmit, handleInputChange};\n}\n\nexport default useForm;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC;IACjCK,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE;MACVC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EAEF,MAAM;IAAEL,QAAQ;IAAEC;EAAW,CAAC,GAAGH,KAAK;EAEtC,SAASQ,QAAQA,CAAA,EAAG;IAClBP,QAAQ,CAAEQ,SAAS,KAAM;MACvB,GAAGA,SAAS;MACZP,QAAQ,EAAE;IACZ,CAAC,CAAC,CAAC;EACL;EAEA,SAASQ,SAASA,CAAA,EAAG;IACnBT,QAAQ,CAAEQ,SAAS,KAAM;MACvB,GAAGA,SAAS;MACZP,QAAQ,EAAE;IACZ,CAAC,CAAC,CAAC;EACL;EAEA,SAASS,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAM;MAAET,WAAW;MAAEC,IAAI;MAAEC,SAAS;MAAEC;IAAQ,CAAC,GAAGP,KAAK,CAACG,UAAU;;IAElE;IACA,MAAMW,IAAI,GAAG;MACXV,WAAW,EAAEA,WAAW;MACxBC,IAAI,EAAEA,IAAI;MACVC,SAAS,EAAEA,SAAS;MACpBC,OAAO,EAAEA;IACX,CAAC;;IAED;IACAQ,KAAK,CAAC,sDAAsD,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC,CACCO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,YAAY,IAAI;MACpB;MACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,YAAY,CAAC;IAC5C,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACd;MACAH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;;IAEJ;IACA3B,QAAQ,CAAEQ,SAAS,KAAM;MACvB,GAAGA,SAAS;MACZP,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE;QACVC,WAAW,EAAE,EAAE;QACfC,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE;MACX;IACF,CAAC,CAAC,CAAC;IACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAEA,SAASsB,iBAAiBA,CAACjB,KAAK,EAAE;IAChC,MAAM;MAAEkB,IAAI;MAAEC;IAAM,CAAC,GAAGnB,KAAK,CAACoB,MAAM;IACpC/B,QAAQ,CAAEQ,SAAS,KAAM;MACvB,GAAGA,SAAS;MACZN,UAAU,EAAE;QACV,GAAGM,SAAS,CAACN,UAAU;QACvB,CAAC2B,IAAI,GAAGC;MACV;IACF,CAAC,CAAC,CAAC;EACL;EAEA,OAAO;IAAC/B,KAAK;IAAEC,QAAQ;IAAEO,QAAQ;IAAEN,QAAQ;IAAEC,UAAU;IAAEO,SAAS;IAAEC,YAAY;IAAEkB;EAAiB,CAAC;AACtG;AAAC9B,EAAA,CAjGQD,OAAO;AAmGhB,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}