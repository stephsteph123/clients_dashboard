{"ast":null,"code":"var _jsxFileName = \"/Users/stephanierowe/clients_dashboard/clients_dashboard/src/components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport useFetchTasks from \"../hooks/useFetchTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Graph(_ref) {\n  _s();\n  let {\n    valueFromUpperCard\n  } = _ref;\n  let y = 1;\n  const {\n    tasks,\n    error\n  } = useFetchTasks();\n  const [hoveredCircle, setHoveredCircle] = useState(null);\n  const handleCircleHover = circleIndex => {\n    setHoveredCircle(circleIndex);\n  };\n  const handleCircleLeave = () => {\n    setHoveredCircle(null);\n  };\n  const sortedTasks = tasks.filter(task => valueFromUpperCard === task.project_name).sort((a, b) => new Date(a.start_date) - new Date(b.start_date));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card all-graph-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body graph-card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line-graph-section\",\n            \"aria-label\": \"graphs of timeline metrics\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"90%\",\n              height: \"100%\",\n              viewBox: \"0 0 42 42\",\n              className: \"line-graph\",\n              \"aria-label\": \"line graph for timeline\",\n              children: tasks.map((task, index) => {\n                if (valueFromUpperCard === task.project_name) {\n                  const formattedStart = task.start_date.slice(5, 11);\n                  const formattedEnd = task.end_date.slice(5, 11);\n                  const dy = `${y}em`;\n                  y += 2;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"g\", {\n                      children: /*#__PURE__*/_jsxDEV(\"text\", {\n                        x: 1,\n                        y: y,\n                        fontSize: 1,\n                        children: [/*#__PURE__*/_jsxDEV(\"tspan\", {\n                          x: 1,\n                          dy: dy,\n                          children: [\"Task: \", task.task]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 49,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"tspan\", {\n                          x: 1,\n                          dy: \"1em\",\n                          children: [\"Start Date: \", formattedStart]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 52,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"tspan\", {\n                          x: 1,\n                          dy: \"1em\",\n                          children: [\"End Date: \", formattedEnd]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 55,\n                          columnNumber: 29\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 48,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false);\n                }\n                return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Graph, \"zeEKUOxC3L8+EVUx4FxsuqK4hIg=\", false, function () {\n  return [useFetchTasks];\n});\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useFetchTasks","jsxDEV","_jsxDEV","Fragment","_Fragment","Graph","_ref","_s","valueFromUpperCard","y","tasks","error","hoveredCircle","setHoveredCircle","handleCircleHover","circleIndex","handleCircleLeave","sortedTasks","filter","task","project_name","sort","a","b","Date","start_date","children","className","fileName","_jsxFileName","lineNumber","columnNumber","width","height","viewBox","map","index","formattedStart","slice","formattedEnd","end_date","dy","x","fontSize","_c","$RefreshReg$"],"sources":["/Users/stephanierowe/clients_dashboard/clients_dashboard/src/components/Graph.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport useFetchTasks from \"../hooks/useFetchTasks\";\n\nfunction Graph({ valueFromUpperCard }) {\n  let y = 1;\n  const { tasks, error } = useFetchTasks();\n\n  const [hoveredCircle, setHoveredCircle] = useState(null);\n\n  const handleCircleHover = (circleIndex) => {\n    setHoveredCircle(circleIndex);\n  };\n\n  const handleCircleLeave = () => {\n    setHoveredCircle(null);\n  };\n\n  const sortedTasks = tasks\n  .filter((task) => valueFromUpperCard === task.project_name)\n  .sort((a, b) => new Date(a.start_date) - new Date(b.start_date));\n\n  return (\n    <>\n      <div className=\"graph\">\n        <div className=\"card all-graph-cards\">\n          <div className=\"card-header\">Graph</div>\n          <div className=\"card-body graph-card-body\">\n            <div\n              className=\"line-graph-section\"\n              aria-label=\"graphs of timeline metrics\"\n            >\n              <svg\n                width=\"90%\"\n                height=\"100%\"\n                viewBox=\"0 0 42 42\"\n                className=\"line-graph\"\n                aria-label=\"line graph for timeline\"\n              >\n                  {tasks.map((task, index) => {\n                    if (valueFromUpperCard === task.project_name) {\n                      const formattedStart = task.start_date.slice(5, 11);\n                      const formattedEnd = task.end_date.slice(5, 11);\n                      const dy = `${y}em`; \n                      y += 2;\n                      return (\n                        <>\n                        <g>\n                          <text key={index} x={1} y={y} fontSize={1}>\n                          <tspan x={1} dy={dy}>\n                            Task: {task.task}\n                            </tspan>\n                            <tspan x={1} dy=\"1em\">\n                            Start Date: {formattedStart}\n                            </tspan>\n                            <tspan x={1} dy=\"1em\">\n                            End Date: {formattedEnd}\n                            </tspan>\n                          </text>\n                          </g>\n                        </>\n                      );\n                    }\n                    return null;\n                  })}\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Graph;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,KAAKA,CAAAC,IAAA,EAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC;EAAmB,CAAC,GAAAF,IAAA;EACnC,IAAIG,CAAC,GAAG,CAAC;EACT,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGX,aAAa,CAAC,CAAC;EAExC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMe,iBAAiB,GAAIC,WAAW,IAAK;IACzCF,gBAAgB,CAACE,WAAW,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMI,WAAW,GAAGP,KAAK,CACxBQ,MAAM,CAAEC,IAAI,IAAKX,kBAAkB,KAAKW,IAAI,CAACC,YAAY,CAAC,CAC1DC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAAC;EAEhE,oBACEvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA;MAAKyB,SAAS,EAAC,OAAO;MAAAD,QAAA,eACpBxB,OAAA;QAAKyB,SAAS,EAAC,sBAAsB;QAAAD,QAAA,gBACnCxB,OAAA;UAAKyB,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxC7B,OAAA;UAAKyB,SAAS,EAAC,2BAA2B;UAAAD,QAAA,eACxCxB,OAAA;YACEyB,SAAS,EAAC,oBAAoB;YAC9B,cAAW,4BAA4B;YAAAD,QAAA,eAEvCxB,OAAA;cACE8B,KAAK,EAAC,KAAK;cACXC,MAAM,EAAC,MAAM;cACbC,OAAO,EAAC,WAAW;cACnBP,SAAS,EAAC,YAAY;cACtB,cAAW,yBAAyB;cAAAD,QAAA,EAEjChB,KAAK,CAACyB,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,KAAK;gBAC1B,IAAI5B,kBAAkB,KAAKW,IAAI,CAACC,YAAY,EAAE;kBAC5C,MAAMiB,cAAc,GAAGlB,IAAI,CAACM,UAAU,CAACa,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;kBACnD,MAAMC,YAAY,GAAGpB,IAAI,CAACqB,QAAQ,CAACF,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;kBAC/C,MAAMG,EAAE,GAAI,GAAEhC,CAAE,IAAG;kBACnBA,CAAC,IAAI,CAAC;kBACN,oBACEP,OAAA,CAAAE,SAAA;oBAAAsB,QAAA,eACAxB,OAAA;sBAAAwB,QAAA,eACExB,OAAA;wBAAkBwC,CAAC,EAAE,CAAE;wBAACjC,CAAC,EAAEA,CAAE;wBAACkC,QAAQ,EAAE,CAAE;wBAAAjB,QAAA,gBAC1CxB,OAAA;0BAAOwC,CAAC,EAAE,CAAE;0BAACD,EAAE,EAAEA,EAAG;0BAAAf,QAAA,GAAC,QACb,EAACP,IAAI,CAACA,IAAI;wBAAA;0BAAAS,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACT,CAAC,eACR7B,OAAA;0BAAOwC,CAAC,EAAE,CAAE;0BAACD,EAAE,EAAC,KAAK;0BAAAf,QAAA,GAAC,cACV,EAACW,cAAc;wBAAA;0BAAAT,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACpB,CAAC,eACR7B,OAAA;0BAAOwC,CAAC,EAAE,CAAE;0BAACD,EAAE,EAAC,KAAK;0BAAAf,QAAA,GAAC,YACZ,EAACa,YAAY;wBAAA;0BAAAX,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAChB,CAAC;sBAAA,GATCK,KAAK;wBAAAR,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAUV;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ;kBAAC,gBACJ,CAAC;gBAEP;gBACA,OAAO,IAAI;cACb,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACxB,EAAA,CApEQF,KAAK;EAAA,QAEaL,aAAa;AAAA;AAAA4C,EAAA,GAF/BvC,KAAK;AAsEd,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}