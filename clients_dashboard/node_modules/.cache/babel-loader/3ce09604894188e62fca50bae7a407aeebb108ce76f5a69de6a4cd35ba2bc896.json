{"ast":null,"code":"var _jsxFileName = \"/Users/stephanierowe/clients_dashboard/clients_dashboard/src/components/Progress.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useFetchTasks from \"../hooks/useFetchTasks\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Progress(_ref) {\n  _s();\n  let {\n    valueFromUpperCard\n  } = _ref;\n  const {\n    tasks,\n    error\n  } = useFetchTasks();\n  let closedVal = 0;\n  let openVal = 0;\n  tasks.map(task => {\n    if (valueFromUpperCard === task.project_name) {\n      if (task.completed_status === \"Open\") {\n        openVal = openVal + 1;\n      } else {\n        closedVal = closedVal + 1;\n      }\n    }\n    return null;\n  });\n  let total = closedVal + openVal;\n  let closedPercentage = closedVal / total * 100;\n  let openPercentage = openVal / total * 100;\n  let closedChart = closedVal / total * 360;\n  let openChart = openVal / total * 360;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col col-4 col-progress\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card all-progress-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header tasks-header\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body progress-card-body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), closedPercentage || openPercentage ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: \"0 0 42 42\",\n          className: \"donut-graph\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"center\",\n            cx: \"10\",\n            cy: \"21\",\n            r: \"15.91549430918954\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            class: \"ring\",\n            cx: \"21\",\n            cy: \"21\",\n            r: \"15.91549430918954\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"graph one\",\n            cx: \"21\",\n            cy: \"21\",\n            r: \"15.91549430918954\",\n            \"stroke-dasharray\": \"50 50\",\n            \"stroke-dashoffset\": \"25\",\n            \"stroke-linecap\": \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"graph two\",\n            cx: \"21\",\n            cy: \"21\",\n            r: \"15.91549430918954\",\n            \"stroke-dasharray\": \"25 75\",\n            \"stroke-dashoffset\": \"75\",\n            \"stroke-linecap\": \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Progress, \"eR40frzU9GqMI/u2DXEKw20BudY=\", false, function () {\n  return [useFetchTasks];\n});\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useFetchTasks","jsxDEV","_jsxDEV","Fragment","_Fragment","Progress","_ref","_s","valueFromUpperCard","tasks","error","closedVal","openVal","map","task","project_name","completed_status","total","closedPercentage","openPercentage","closedChart","openChart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","width","height","viewBox","cx","cy","r","_c","$RefreshReg$"],"sources":["/Users/stephanierowe/clients_dashboard/clients_dashboard/src/components/Progress.jsx"],"sourcesContent":["import React from \"react\";\nimport useFetchTasks from \"../hooks/useFetchTasks\";\nimport \"../index.css\";\n\nfunction Progress({ valueFromUpperCard }) {\n  const { tasks, error } = useFetchTasks();\n  let closedVal = 0;\n  let openVal = 0;\n\n  tasks.map((task) => {\n    if (valueFromUpperCard === task.project_name) {\n      if (task.completed_status === \"Open\") {\n        openVal = openVal + 1;\n      } else {\n        closedVal = closedVal + 1;\n      }\n    }\n    return null;\n  });\n\n  let total = closedVal + openVal;\n  let closedPercentage = (closedVal / total) * 100;\n  let openPercentage = (openVal / total) * 100;\n  let closedChart = (closedVal / total) * 360;\n  let openChart = (openVal / total) * 360;\n\n  return (\n    <div className=\"col col-4 col-progress\">\n      <div className=\"card all-progress-cards\">\n        <div className=\"card-header tasks-header\">Progress</div>\n        <div className=\"card-body progress-card-body\"></div>\n        {closedPercentage || openPercentage ? <></> : <div></div>}\n        <div class=\"container\">\n          <svg\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 42 42\"\n            className=\"donut-graph\"\n          >\n            <circle\n              className=\"center\"\n              cx=\"10\"\n              cy=\"21\"\n              r=\"15.91549430918954\"\n            ></circle>\n            <circle class=\"ring\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\"></circle>\n\n            <circle\n              className=\"graph one\"\n              cx=\"21\"\n              cy=\"21\"\n              r=\"15.91549430918954\"\n              stroke-dasharray=\"50 50\"\n              stroke-dashoffset=\"25\"\n              stroke-linecap=\"round\"\n            ></circle>\n\n            <circle\n              className=\"graph two\"\n              cx=\"21\"\n              cy=\"21\"\n              r=\"15.91549430918954\"\n              stroke-dasharray=\"25 75\"\n              stroke-dashoffset=\"75\"\n              stroke-linecap=\"round\"\n            ></circle>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Progress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}