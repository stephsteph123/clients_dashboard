{"ast":null,"code":"var _jsxFileName = \"/Users/stephanierowe/clients_dashboard/clients_dashboard/src/components/Progress.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useFetchTasks from \"../hooks/useFetchTasks\";\nimport \"../index.css\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Progress(_ref) {\n  _s();\n  let {\n    valueFromUpperCard\n  } = _ref;\n  const {\n    tasks,\n    error\n  } = useFetchTasks();\n  let closedVal = 0;\n  let openVal = 0;\n  tasks.map(task => {\n    if (valueFromUpperCard === task.project_name) {\n      if (task.completed_status === \"Open\") {\n        openVal = openVal + 1;\n      } else {\n        closedVal = closedVal + 1;\n      }\n    }\n    return null;\n  });\n\n  //\n  // Donut Stack Graph\n  //\n\n  var DonutStackGraph = function (el, series, opts) {\n    opts || (opts = {});\n    this.el = d3.select(el);\n    this.size = opts.size || 48;\n    this.thickness = opts.thickness;\n    this.total = opts.total;\n    this.label_subtext = opts.label_subtext || '';\n    this.series = series;\n  };\n  DonutStackGraph.prototype.draw = function () {\n    var series = this.series,\n      total = this.total;\n    if (!total) {\n      total = 0;\n      for (var i = 0; i < series.length; i++) {\n        total += series[i].value;\n      }\n    }\n    this.el.html(''); // Clear out contents\n\n    this.el.classed('donut-stack-graph', true);\n    for (var i = 0; i < series.length; i++) {\n      var item = this.el.append('div').classed('donut-stack-graph-item', true);\n      var subtext = Util.format_integer(series[i].value);\n      if (this.label_subtext) {\n        subtext += ' ' + this.label_subtext;\n      }\n      var donut = new DonutGraph(item.node(), [], {\n        total: total,\n        value: series[i].value,\n        value_text: Util.format_integer(Math.round(100 * series[i].value / total)) + '%',\n        value_color: series[i].color,\n        label: series[i].name,\n        label_position: 'right',\n        label_subtext: subtext,\n        color: series[i].color,\n        size: this.size,\n        thickness: this.thickness\n      });\n      donut.el.classed('donut-stack-graph-item-donut-graph');\n      donut.draw();\n    }\n  };\n  var graph = new DonutStackGraph('#donut-stack-graph', [{\n    name: \"Widget\",\n    value: 1167,\n    color: \"#6ea6df\"\n  }, {\n    name: \"Web Portal\",\n    value: 543,\n    color: \"#84c26d\"\n  }, {\n    name: \"Mobile\",\n    value: 224,\n    color: \"#e17a69\"\n  }, {\n    name: \"Email\",\n    value: 404,\n    color: \"#eeab68\"\n  }], {\n    total: 2131,\n    label_subtext: 'people',\n    thickness: 4\n  });\n  graph.draw();\n  let total = closedVal + openVal;\n  let closedPercentage = closedVal / total * 100;\n  let openPercentage = openVal / total * 100;\n  let closedChart = closedVal / total * 360;\n  let openChart = openVal / total * 360;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col col-4 col-progress\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card all-progress-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header tasks-header\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body progress-card-body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), closedPercentage || openPercentage ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"donut-stack-graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Progress, \"eR40frzU9GqMI/u2DXEKw20BudY=\", false, function () {\n  return [useFetchTasks];\n});\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useFetchTasks","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","Progress","_ref","_s","valueFromUpperCard","tasks","error","closedVal","openVal","map","task","project_name","completed_status","DonutStackGraph","el","series","opts","select","size","thickness","total","label_subtext","prototype","draw","i","length","value","html","classed","item","append","subtext","Util","format_integer","donut","DonutGraph","node","value_text","Math","round","value_color","color","label","name","label_position","graph","closedPercentage","openPercentage","closedChart","openChart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/stephanierowe/clients_dashboard/clients_dashboard/src/components/Progress.jsx"],"sourcesContent":["import React from \"react\";\nimport useFetchTasks from \"../hooks/useFetchTasks\";\nimport \"../index.css\";\nimport * as d3 from \"d3\";\n\nfunction Progress({ valueFromUpperCard }) {\n  const { tasks, error } = useFetchTasks();\n  let closedVal = 0;\n  let openVal = 0;\n\n  tasks.map((task) => {\n    if (valueFromUpperCard === task.project_name) {\n      if (task.completed_status === \"Open\") {\n        openVal = openVal + 1;\n      } else {\n        closedVal = closedVal + 1;\n      }\n    }\n    return null;\n  });\n\n  //\n// Donut Stack Graph\n//\n\nvar DonutStackGraph = function(el, series, opts) {\n  opts || (opts = {});\n  \n  this.el = d3.select(el);\n  \n  this.size = opts.size || 48;\n  this.thickness = opts.thickness;\n  this.total = opts.total;\n  this.label_subtext = opts.label_subtext || '';\n  \n  this.series = series;\n};\n\nDonutStackGraph.prototype.draw = function() {\n  var series = this.series\n  ,   total = this.total\n  ;\n  \n  if (!total) {\n    total = 0;\n    for (var i = 0; i < series.length; i++) {\n      total += series[i].value;\n    }\n  }\n  \n  this.el.html(''); // Clear out contents\n  \n  this.el.classed('donut-stack-graph', true);\n  \n  for (var i = 0; i < series.length; i++) {\n    var item = this.el.append('div').classed('donut-stack-graph-item', true);\n    \n    var subtext = Util.format_integer(series[i].value);\n    if (this.label_subtext) { subtext += ' ' + this.label_subtext; }\n    \n    var donut = new DonutGraph(item.node(), [], {\n      total: total,\n      value: series[i].value,\n      value_text: Util.format_integer(Math.round(100 * series[i].value / total)) + '%',\n      value_color: series[i].color,\n      label: series[i].name,\n      label_position: 'right',\n      label_subtext: subtext, \n      color: series[i].color,\n      size: this.size,\n      thickness: this.thickness\n    });\n    \n    donut.el\n      .classed('donut-stack-graph-item-donut-graph');\n    \n    donut.draw();\n  }\n  \n};\n\nvar graph = new DonutStackGraph('#donut-stack-graph', [\n  {name: \"Widget\",     value: 1167, color: \"#6ea6df\" },\n  {name: \"Web Portal\", value: 543,  color: \"#84c26d\" },\n  {name: \"Mobile\",     value: 224,  color: \"#e17a69\" },\n  {name: \"Email\",      value: 404,  color: \"#eeab68\" }\n], {\n  total: 2131,\n  label_subtext: 'people',\n  thickness: 4\n});\ngraph.draw()\n\n  let total = closedVal + openVal;\n  let closedPercentage = (closedVal / total) * 100;\n  let openPercentage = (openVal / total) * 100;\n  let closedChart = (closedVal / total) * 360;\n  let openChart = (openVal / total) * 360;\n\n  return (\n    <div className=\"col col-4 col-progress\">\n      <div className=\"card all-progress-cards\">\n        <div className=\"card-header tasks-header\">Progress</div>\n        <div className=\"card-body progress-card-body\"></div>\n        {closedPercentage || openPercentage ? <></> : \n        <div></div>}\n        <div id=\"donut-stack-graph\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Progress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}