{"ast":null,"code":"var _jsxFileName = \"/Users/stephanierowe/clients_dashboard/clients_dashboard/src/components/Progress.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useFetchTasks from \"../hooks/useFetchTasks\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Progress(_ref) {\n  _s();\n  let {\n    valueFromUpperCard\n  } = _ref;\n  const {\n    tasks,\n    error\n  } = useFetchTasks();\n  let closedVal = 0;\n  let openVal = 0;\n  tasks.map(task => {\n    if (valueFromUpperCard === task.project_name) {\n      if (task.completed_status === \"Open\") {\n        openVal = openVal + 1;\n      } else {\n        closedVal = closedVal + 1;\n      }\n    }\n    return null;\n  });\n  let total = closedVal + openVal;\n  let closedPercentage = closedVal / total * 100;\n  let openPercentage = Math.round(openVal / total * 100);\n  let strokeDash = `${openPercentage} 180`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col col-4 col-progress\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card all-progress-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header tasks-header\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body progress-card-body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), closedPercentage || openPercentage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"donut-graph-section\",\n          \"aria-label\": \"graphs of hiring metrics\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"100%\",\n            height: \"100%\",\n            viewBox: \"0 0 42 42\",\n            class: \"donut\",\n            \"aria-label\": \"donut graph for number of applicants\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              class: \"donut-hole\",\n              cx: \"21\",\n              cy: \"21\",\n              r: \"15.91549430918954\",\n              fill: \"#fff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              class: \"donut-ring\",\n              cx: \"21\",\n              cy: \"21\",\n              r: \"15.91549430918954\",\n              fill: \"transparent\",\n              stroke: \"#d2d3d4\",\n              \"stroke-width\": \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              class: \"donut-segment\",\n              cx: \"21\",\n              cy: \"21\",\n              r: \"15.91549430918954\",\n              fill: \"transparent\",\n              stroke: \"#8DC7CD\",\n              \"stroke-width\": \"4\",\n              \"stroke-dasharray\": strokeDash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n              class: \"donut-graph-text-one\",\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"50%\",\n                y: \"50%\",\n                class: \"chart-number\",\n                children: \"120\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"50%\",\n                y: \"50%\",\n                class: \"chart-label\",\n                children: \"APPLICANTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Data To Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Progress, \"eR40frzU9GqMI/u2DXEKw20BudY=\", false, function () {\n  return [useFetchTasks];\n});\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useFetchTasks","jsxDEV","_jsxDEV","Fragment","_Fragment","Progress","_ref","_s","valueFromUpperCard","tasks","error","closedVal","openVal","map","task","project_name","completed_status","total","closedPercentage","openPercentage","Math","round","strokeDash","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","width","height","viewBox","cx","cy","r","fill","stroke","x","y","_c","$RefreshReg$"],"sources":["/Users/stephanierowe/clients_dashboard/clients_dashboard/src/components/Progress.jsx"],"sourcesContent":["import React from \"react\";\nimport useFetchTasks from \"../hooks/useFetchTasks\";\nimport \"../index.css\";\n\nfunction Progress({ valueFromUpperCard }) {\n  const { tasks, error } = useFetchTasks();\n  let closedVal = 0;\n  let openVal = 0;\n\n  tasks.map((task) => {\n    if (valueFromUpperCard === task.project_name) {\n      if (task.completed_status === \"Open\") {\n        openVal = openVal + 1;\n      } else {\n        closedVal = closedVal + 1;\n      }\n    }\n    return null;\n  });\n\n  let total = closedVal + openVal;\n  let closedPercentage = (closedVal / total) * 100;\n  let openPercentage = Math.round((openVal / total) * 100);\n  let strokeDash = `${openPercentage} 180`;\n\n  return (\n    <div className=\"col col-4 col-progress\">\n      <div className=\"card all-progress-cards\">\n        <div className=\"card-header tasks-header\">Progress</div>\n        <div className=\"card-body progress-card-body\"></div>\n        {closedPercentage || openPercentage ? (\n          <>\n            <div\n              class=\"donut-graph-section\"\n              aria-label=\"graphs of hiring metrics\"\n            >\n              <svg\n                width=\"100%\"\n                height=\"100%\"\n                viewBox=\"0 0 42 42\"\n                class=\"donut\"\n                aria-label=\"donut graph for number of applicants\"\n              >\n                <circle\n                  class=\"donut-hole\"\n                  cx=\"21\"\n                  cy=\"21\"\n                  r=\"15.91549430918954\"\n                  fill=\"#fff\"\n                ></circle>\n                <circle\n                  class=\"donut-ring\"\n                  cx=\"21\"\n                  cy=\"21\"\n                  r=\"15.91549430918954\"\n                  fill=\"transparent\"\n                  stroke=\"#d2d3d4\"\n                  stroke-width=\"4\"\n                ></circle>\n                <circle\n                  class=\"donut-segment\"\n                  cx=\"21\"\n                  cy=\"21\"\n                  r=\"15.91549430918954\"\n                  fill=\"transparent\"\n                  stroke=\"#8DC7CD\"\n                  stroke-width=\"4\"\n                  stroke-dasharray={strokeDash}\n                ></circle>\n                <g class=\"donut-graph-text-one\">\n                  <text x=\"50%\" y=\"50%\" class=\"chart-number\">\n                    120\n                  </text>\n                  <text x=\"50%\" y=\"50%\" class=\"chart-label\">\n                    APPLICANTS\n                  </text>\n                </g>\n              </svg>\n            </div>\n          </>\n        ) : (\n        <div>No Data To Show</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Progress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}